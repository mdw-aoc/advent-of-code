(ns aoc.y!Y!.d!NS!-spec
  (:require [speclj.core :refer :all]
            [aoc.y!Y!.d!NS! :as sut]
            [aoc.data :as data]))

(def real-data
  #_(data/read-str !Y! !D!))

(def sample-data
  [])

(describe "!Y! Day !D!"
  (context "Part 1"
    (it "calculates __")

    #_(it "solves with sample data"
        (should= 0 (sut/part1 sample-data)))

    #_(it "solves with real data"
        (should= 0 (sut/part1 real-data)))

    )

  #_(context "Part 2"
      #_(it "solves with sample data"
          (should= 0 (sut/part2 sample-data)))

      #_(it "solves with real data"
          (should= 0 (sut/part2 real-data)))
    )
  )
